<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- DB 접속 정보 -->
	<properties resource="youngun/tis/config/jdbc.tis" />	
	
	<!-- typeAlias : Full Class Name을 alias로 정의 -->
	<typeAliases>
		<typeAlias alias="login" type="youngun.tis.user.login.domain.Login" />
		<typeAlias alias="user" type="youngun.tis.user.management.domain.User" />
		<typeAlias alias="post" type="youngun.tis.qna.domain.Post"/>
		<typeAlias alias="page" type="youngun.tis.qna.domain.Page"/>
	</typeAliases>

	<environments default="development">
		<environment id="development">
			<!-- 
			- JDBC : 간단한 JDBC 트랜잭션 관리 방식 
			- MANAGED : commit, rollback등 아무것도 하지 않는다. 컨테이너에게 맡긴다. 
			-->
			<transactionManager type="JDBC" />

			<!-- 
			- UNPOOLED : 매번 요청에 대해 커넥션을 열고 닫는다. 
			- POOLED : DataSource 에 풀링이 적용된 JDBC 커넥션을 위한 구현체이다. 
			- JNDI : 이 DataSource 구현체는 컨테이너에 따라 설정이 변경되며 ,
			  JNDI 컨텍스트를 참조한다. : initial_context, data_source 
			-->
			<dataSource type="POOLED">
				<property name="driver" value="${JDBC.Driver}" />
				<property name="url" value="${JDBC.ConnectionURL}" />
				<property name="username" value="${JDBC.Username}" />
				<property name="password" value="${JDBC.Password}" />
			</dataSource>
		</environment>
	</environments>

	<mappers>		
		<mapper resource="youngun/tis/user/login/dao/mapper/LoginMapper.xml" />
		<mapper resource="youngun/tis/user/management/dao/mapper/UserMapper.xml" />
		<mapper resource="youngun/tis/qna/dao/mapper/PostMapper.xml" />
		<mapper resource="youngun/tis/qna/dao/mapper/PageMapper.xml" />
	</mappers>
</configuration>